<?php
// https://mlocati.github.io/php-cs-fixer-configurator/
return PhpCsFixer\Config::create()
	->setRules([
		'@PSR2'                  => true,
		'@Symfony'               => false,
		'array_indentation'      => true,
		'array_syntax'           => ['syntax' => 'long'],
		'binary_operator_spaces' => [
			'align_double_arrow' => true,
			//'align_equals' => true,
		],
		'blank_line_before_statement' => ['statements' => ['break', 'case', 'continue', 'declare', 'default', 'die', 'do', 'exit', 'for', 'foreach', 'goto', 'if', 'include', 'include_once', 'require', 'require_once', 'return', 'switch', 'throw', 'try', 'while', 'yield']],
		'braces'                      => [
			'allow_single_line_closure'                   => true,
			'position_after_anonymous_constructs'         => 'same',
			'position_after_control_structures'           => 'same',
			'position_after_functions_and_oop_constructs' => 'same',
		],
		'cast_spaces'                        => ['space' => 'none'],
		'class_definition'                   => ['singleLine' => true],
		'concat_space'                       => ['spacing' => 'one'],
		'declare_equal_normalize'            => ['space' => 'single'],
		'function_typehint_space'            => true,
		'hash_to_slash_comment'              => true,
		'include'                            => true,
		'lowercase_cast'                     => true,
		'method_separation'                  => true,
		'native_function_casing'             => true,
		'new_with_braces'                    => true,
		'no_alternative_syntax'              => true,
		'no_blank_lines_after_class_opening' => true,
		'no_blank_lines_after_phpdoc'        => true,
		'no_extra_blank_lines'               => [
			'break',
			'case',
			'continue',
			'curly_brace_block',
			'default',
			'extra',
			'parenthesis_brace_block',
			'return',
			'square_brace_block',
			'switch',
			'throw',
			'use',
			'use_trait',
		],
		'no_leading_namespace_whitespace'             => true,
		'no_multiline_whitespace_around_double_arrow' => true,
		'no_multiline_whitespace_before_semicolons'   => true,
		'no_singleline_whitespace_before_semicolons'  => true,
		'no_spaces_around_offset'                     => true,
		'no_trailing_comma_in_list_call'              => true,
		'no_trailing_comma_in_singleline_array'       => true,
		'no_whitespace_before_comma_in_array'         => true,
		'no_whitespace_in_blank_line'                 => true,
		'no_trailing_whitespace'                      => true,
		'normalize_index_brace'                       => true,
		'object_operator_without_whitespace'          => true,
		'phpdoc_align'                                => true,
		'phpdoc_indent'                               => true,
		'phpdoc_inline_tag'                           => true,
		'increment_style'                             => ['style' => 'pre'],
		'return_type_declaration'                     => true,
		'short_scalar_cast'                           => true,
		'single_blank_line_before_namespace'          => true,
		'single_class_element_per_statement'          => true,
		'single_quote'                                => true,
		'space_after_semicolon'                       => true,
		'standardize_not_equals'                      => true,
		'standardize_increment'                       => true,
		'ternary_operator_spaces'                     => true,
		'trailing_comma_in_multiline_array'           => true,
		'trim_array_spaces'                           => true,
		'unary_operator_spaces'                       => true,
		'whitespace_after_comma_in_array'             => true,
		'yoda_style'                                  => [
			'always_move_variable' => false,
			'equal'                => true,
			'identical'            => false,
			'less_and_greater'     => false,
		],
	])
		->setIndent("\t")
		->setLineEnding("\n");
